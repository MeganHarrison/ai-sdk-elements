name = "alleato-backend"
main = "src/index.ts"
compatibility_date = "2024-01-01"

[vars]
ENVIRONMENT = "development"

# D1 Database
[[d1_databases]]
binding = "DB"
database_name = "alleato"
database_id = "fc7c9a6d-ca65-4768-b3f9-07ec5afb38c5"
migrations_dir = "migrations"

# R2 Storage
[[r2_buckets]]
binding = "R2"
bucket_name = "alleato-files"

# KV Namespaces
[[kv_namespaces]]
binding = "SESSIONS"
id = "28827eca67e34ceca8d781a1932dead7"

[[kv_namespaces]]
binding = "CACHE"
id = "31fe3137b6f543c89fd8dc84a511691e"

[[kv_namespaces]]
binding = "RATE_LIMIT"
id = "012891234b664e7c88bb57e48295ed25"

# Analytics Engine (uncomment when ready to set up)
# [[analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "alleato_analytics"

# Scheduled Events for cache warming
[triggers]
crons = ["0 */6 * * *"] # Every 6 hours

# Durable Objects (uncomment when implementing real-time features)
# [[durable_objects.bindings]]
# name = "QUERY_SESSION"
# class_name = "QuerySession"
# script_name = "alleato-backend"

# Queues (uncomment when implementing background processing)
# [[queues.producers]]
# queue = "cache-warming-queue"
# binding = "CACHE_QUEUE"

# [[queues.consumers]]
# queue = "cache-warming-queue"
# max_batch_size = 10
# max_batch_timeout = 5

# Environment specific configurations
[env.production]
name = "alleato-backend"
vars = { ENVIRONMENT = "production" }

[env.staging]
name = "alleato-backend-staging"
vars = { ENVIRONMENT = "staging" }